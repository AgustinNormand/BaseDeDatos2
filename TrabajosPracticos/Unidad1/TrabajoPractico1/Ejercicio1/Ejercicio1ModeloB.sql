CREATE TABLE FACTURA
(
    NRO INTEGER NOT NULL,
    IMPORTE INTEGER NOT NULL,
    
    CONSTRAINT PK_NRO PRIMARY KEY (NRO)
);

CREATE GENERATOR GEN_NRO_FACTURA;
SET GENERATOR GEN_NRO_FACTURA TO 0;

CREATE EXCEPTION EX_NRO_FACTURA 'No se puede modificar el NRO de factura';

SET TERM ^ ;

CREATE TRIGGER TRG_BIFACTURA FOR FACTURA 
    ACTIVE 
    BEFORE INSERT
    POSITION 0 
    AS 
BEGIN 
   NEW.NRO = GEN_ID(GEN_NRO_FACTURA,1);
END^

CREATE TRIGGER TRG_BUFACTURA FOR FACTURA
   ACTIVE
   BEFORE UPDATE
   POSITION 0
   AS
BEGIN
   IF (NEW.NRO <> OLD.NRO) THEN
      EXCEPTION EX_NRO_FACTURA;
END^

CREATE PROCEDURE SP_FACTURA
   (OPERATION CHAR(1), 
   NRO TYPE OF COLUMN FACTURA.NRO,
   IMPORTE TYPE OF COLUMN FACTURA.IMPORTE)
RETURNS(
   ERROR_CODE INTEGER,
   ERROR_MESSAGE VARCHAR(20))
AS
BEGIN
   ERROR_CODE = 0;
   ERROR_MESSAGE = 'OK';
   IF (OPERATION = 'I') THEN
      INSERT INTO FACTURA (IMPORTE) VALUES (:IMPORTE);
   IF (OPERATION = 'U') THEN
      UPDATE FACTURA SET IMPORTE = :IMPORTE WHERE NRO = :NRO;
   IF (OPERATION = 'D') THEN
      DELETE FROM FACTURA WHERE NRO = :NRO;
   WHEN ANY DO BEGIN
      ERROR_CODE = SQLCODE;
      ERROR_MESSAGE = OPERATION || ' ' || 'FACTURA';
   END
END^

CREATE PROCEDURE SP_SFACTURA
RETURNS (NRO TYPE OF COLUMN FACTURA.NRO,
   IMPORTE TYPE OF COLUMN FACTURA.IMPORTE);
AS
BEGIN
   FOR SELECT NRO,IMPORTE FROM FACTURA INTO :NRO,:IMPORTE DO SUSPEND;
END^

SET TERM ; ^

-- SEGURIDAD

CREATE USER AGUSTINEJ1B
   PASSWORD 'asdasd'
   FIRSTNAME 'Agustin'
   MIDDLENAME ''
   LASTNAME 'Normand';

CREATE ROLE USUARIO;

GRANT EXECUTE ON PROCEDURE SP_FACTURA TO USUARIO;

GRANT EXECUTE ON PROCEDURE SP_SFACTURA TO USUARIO;

GRANT SELECT ON FACTURA TO PROCEDURE SP_SFACTURA;

GRANT INSERT ON FACTURA TO PROCEDURE SP_FACTURA;

GRANT DELETE ON FACTURA TO PROCEDURE SP_FACTURA;

GRANT UPDATE ON FACTURA TO PROCEDURE SP_FACTURA;

GRANT USUARIO TO AGUSTINEJ1B;
