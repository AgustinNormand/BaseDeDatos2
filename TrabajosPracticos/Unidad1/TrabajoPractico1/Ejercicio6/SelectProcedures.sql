   SET TERM ^ ;

   CREATE PROCEDURE SP_SELECT_PROCEDURE_1Y2
   (
      IMPORTE_DESDE INTEGER,
      IMPORTE_HASTA INTEGER
   ) 
   RETURNS
   (
      NRO TYPE OF COLUMN FACTURA.NRO,
      IMPORTE TYPE OF COLUMN FACTURA.IMPORTE,
      FECHA TYPE OF COLUMN FACTURA.FECHA
   )
   AS
   BEGIN
         IF (IMPORTE_DESDE IS NULL) THEN
            IMPORTE_DESDE = (SELECT MIN(IMPORTE) FROM FACTURA);
         IF (IMPORTE_HASTA IS NULL) THEN
            IMPORTE_HASTA = (SELECT MAX(IMPORTE) FROM FACTURA);
      FOR
         SELECT NRO,IMPORTE,FECHA
         FROM FACTURA
         WHERE IMPORTE >= :IMPORTE_DESDE AND IMPORTE <= :IMPORTE_HASTA
      INTO :NRO,:IMPORTE,:FECHA
      DO
      SUSPEND;
   END^


   CREATE PROCEDURE SP_SELECT_PROCEDURE_3
   (
      NRO_DESDE INTEGER,
      NRO_HASTA INTEGER
   )
   
   RETURNS
   (
      NRO TYPE OF COLUMN FACTURA.NRO,
      TOTAL_PESOS TYPE OF COLUMN FACTURA.IMPORTE,
      TOTAL_CANTIDAD TYPE OF COLUMN PRODUCTO.STOCK
   )
   AS
   BEGIN
      FOR
         SELECT PRODUCTO.ID,TOTALPESOS,TOTALCANTIDAD
         FROM
            PRODUCTO
         JOIN
            (SELECT ID,SUM(SUBTOTAL) TOTALPESOS ,SUM(CANTIDAD) TOTALCANTIDAD
             FROM DETALLE
             WHERE NRO IN (SELECT NRO FROM FACTURA WHERE NRO >= :NRO_DESDE AND NRO <= :NRO_HASTA)
             GROUP BY ID) AS FACTURADOS
         ON 
            FACTURADOS.ID = PRODUCTO.ID
      INTO :NRO,:TOTAL_PESOS,:TOTAL_CANTIDAD
      DO SUSPEND;
   END^

   CREATE PROCEDURE SP_SELECT_PROCEDURE_4
   RETURNS
   (
      ID TYPE OF COLUMN PRODUCTO.ID,
      DESCR TYPE OF COLUMN PRODUCTO.DESCR,
      STOCK TYPE OF COLUMN PRODUCTO.STOCK,
      FACTURA1 TYPE OF COLUMN FACTURA.NRO,
      FACTURA2 TYPE OF COLUMN FACTURA.NRO,
      FACTURA3 TYPE OF COLUMN FACTURA.NRO
   )
   AS
   BEGIN
      FOR
         SELECT ID,DESCR,STOCK FROM PRODUCTO
      INTO :ID,:DESCR,:STOCK
      DO BEGIN      
         :FACTURA1 = (SELECT FIRST 1 NRO AS IDPRODUCTO FROM DETALLE WHERE ID = :ID ORDER BY NRO DESC);
         :FACTURA2 = (SELECT FIRST 1 SKIP 1 NRO FROM DETALLE WHERE ID = :ID ORDER BY NRO DESC);
         :FACTURA3 = (SELECT FIRST 1 SKIP 2 NRO FROM DETALLE WHERE ID = :ID ORDER BY NRO DESC);
         SUSPEND;
      END
   END^

   CREATE PROCEDURE SP_SELECT_PROCEDURE_5
   RETURNS
   (
      FAC100 INTEGER,
      FAC1000 INTEGER,
      FAC10000 INTEGER,
      FAC100000 INTEGER
   )
   AS
   BEGIN
      FAC100 = ( SELECT COUNT(*) FROM FACTURA WHERE IMPORTE <= 100 );
      FAC1000 = ( SELECT COUNT(*) FROM FACTURA WHERE IMPORTE <= 1000 AND IMPORTE > 100 );
      FAC10000 = ( SELECT COUNT(*) FROM FACTURA WHERE IMPORTE <= 10000 AND IMPORTE > 1000);
      FAC100000 = ( SELECT COUNT(*) FROM FACTURA WHERE IMPORTE <= 100000 AND IMPORTE > 10000);
      SUSPEND;
   END^


   CREATE PROCEDURE SP_SELECT_PROCEDURE_6
   RETURNS
   (
      NRO TYPE OF COLUMN FACTURA.NRO,
      IMPORTE TYPE OF COLUMN FACTURA.IMPORTE,
      ESTADO TYPE OF COLUMN FACTURA.ESTADO,
      FECHA TYPE OF COLUMN FACTURA.FECHA
   )
   AS
      DECLARE ID_SEGUNDO_PRODUCTO INTEGER;
      DECLARE A INTEGER;
   BEGIN
      FOR 
         SELECT D.NRO FROM DETALLE D GROUP BY D.NRO
         INTO :A
      DO
      BEGIN
         ID_SEGUNDO_PRODUCTO = (SELECT FIRST 1 SKIP 1 ID FROM DETALLE WHERE NRO = :A ORDER BY NRO,ID);
         IF ( (SELECT P.STOCK FROM PRODUCTO P WHERE P.ID = :ID_SEGUNDO_PRODUCTO ) < 1000 ) THEN
         BEGIN
            SELECT F.NRO,F.IMPORTE,F.ESTADO,F.FECHA FROM FACTURA F WHERE F.NRO = :A
            INTO :NRO,:IMPORTE,:ESTADO,:FECHA;
            SUSPEND;
         END
      END
   END^

   CREATE PROCEDURE SP_SELECT_PROCEDURE_7
   (
      YEAR_FACTURADO INTEGER
   )
   RETURNS
   (
   MES01 FLOAT,
   MES02 FLOAT,
   MES03 FLOAT,
   MES04 FLOAT,
   MES05 FLOAT,
   MES06 FLOAT,
   MES07 FLOAT,
   MES08 FLOAT,
   MES09 FLOAT,
   MES10 FLOAT,
   MES11 FLOAT,
   MES12 FLOAT
   )
   AS
      DECLARE MES INTEGER;
      DECLARE TOTAL FLOAT;
   BEGIN
      FOR
         SELECT EXTRACT(MONTH FROM F.FECHA) MES,SUM(IMPORTE) TOTAL
         FROM FACTURA F 
         WHERE EXTRACT(YEAR FROM F.FECHA) = :YEAR_FACTURADO
         GROUP BY MES
      INTO :MES,:TOTAL
      DO
      BEGIN
         IF (:MES = 1) THEN
            :MES01 = :TOTAL;
         IF (:MES = 2) THEN
            :MES02 = :TOTAL;
         IF (:MES = 3) THEN
            :MES03 = :TOTAL;
         IF (:MES = 4) THEN
            :MES04 = :TOTAL;
         IF (:MES = 5) THEN
            :MES05 = :TOTAL;
         IF (:MES = 6) THEN
            :MES06 = :TOTAL;
         IF (:MES = 7) THEN
            :MES07 = :TOTAL;
         IF (:MES = 8) THEN
            :MES08 = :TOTAL;
         IF (:MES = 9) THEN
            :MES09 = :TOTAL;
         IF (:MES = 10) THEN
            :MES10 = :TOTAL;
         IF (:MES = 11) THEN
            :MES11 = :TOTAL;
         IF (:MES = 12) THEN
            :MES12 = :TOTAL;
      END
      SUSPEND;
   END^
SET TERM ; ^






































