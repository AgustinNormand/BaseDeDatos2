OBJETIVO, MOSTRAR EL FUNCIONAMIENTO DE UNA RELACION BIDIRECCIONAL

Si tengo un CLIENTE que tiene una DIRECCION.
Y una DIRECCION que pertenece a un CLIENTE.

En la base de datos tengo que elegir quien va a tener la FOREIGN KEY.

En mi caso elegí que el CLIENTE tenga la FOREIGN KEY de DIRECCION.
Esto hace que desde la base de datos no pueda acceder al CLIENTE desde la DIRECCION.

JPA permite convertirla en bidireccional en la aplicacion, mientras que en la base de datos siga siendo unidireccional.

Es decir, desde el codigo puedo acceder desde la DIRECCION al CLIENTE, mientras que desde la base de datos, no.
Osea, no se produce ningun cambio en las FOREIGN KEY de la base de datos.


public class Direccion

@OneToOne(mappedBy = "X")
Empleado empleado
//Donde X es el nombre del campo de la CLASE EMPLEADO, que almacena el valor de la DIRECCION.


public class Empleado

@OneToOne(name = "ID_DIRECCION")
Direccion miCasita;

En este caso el valor que se debería poner en la X en la clase Direccion, es "miCasita".

Otra cosa importante es ponerle fetch = FetchType.LAZY en el @OneToOne de la clase DIRECCION.

Para que no cargue todos los clientes innecesariamente, sobrecargando a la base de datos sin sentido.
Y solo obtenga el valor del atributo empleado cuando se haga un direccion.getEmpleado().
