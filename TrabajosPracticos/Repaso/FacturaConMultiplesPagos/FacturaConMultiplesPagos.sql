
CREATE TABLE FACTURA(
	NRO INT NOT NULL,
	CONSTRAINT PK_FACTURA PRIMARY KEY (NRO)
);

CREATE TABLE FACTURA_AUX(
	NRO INT NOT NULL,
	ESTADO INT DEFAULT 0, -- 1 PENDIENTE DE PAGO 2 PAGADA
	MONTO_TOTAL FLOAT DEFAULT 0,
	MONTO_RESTANTE_PAGO FLOAT DEFAULT 0,
	CONSTRAINT PK_FACTURA PRIMARY KEY (NRO),
	CONSTRAINT FK_FACTURA_AUX_FACTURA FOREIGN KEY (NRO) REFERENCES FACTURA ON CASCADE UPDATE ON CASCADE DELETE
);

CREATE TABLE PAGO(
	ID_PAGO INT NOT NULL,
	NRO INT NOT NULL,
	MONTO FLOAT NOT NULL,
	CONSTRAINT PK_PAGO PRIMARY KEY (ID_PAGO,NRO),
	CONSTRAINT FK_PAGO_FACTURA FOREIGN KEY (NRO) REFERENCES FACTURA ON CASCADE UPDATE ON CASCADE DELETE
);

CREATE TABLE PRODUCTO(
	ID_PRODUCTO INT NOT NULL,
	DESCRIPCION VARCHAR(20) NOT NULL,
);

CREATE TABLE DETALLE(
	NRO INT NOT NULL,
	ID_PRODUCTO INT NOT NULL,
	PRECIO FLOAT NOT NULL,
	CANTIDAD INT NOT NULL,
	CONSTRAINT PK_DETALLE PRIMARY KEY (NRO,ID_PRODUCTO),
	CONSTRAINT FK_DETALLE_FACTURA FOREIGN KEY (NRO) REFERENCES FACTURA ON CASCADE UPDATE CON CASCADE DELETE,
	CONSTRAINT FK_DETALLE_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO ON CASCADE UPDATE ON CASCADE DELETE
);

CREATE EXCEPTION EX_AGREGAR_PAGO_FACTURA_PAGA 'No se puede agregar un pago a una factura pagada';
CREATE EXCEPTION EX_PAGO_MAYOR_AL_MONTO 'No se puede pagar más de lo que se debe';
CREATE EXCEPTION EX_CLAVE_PRIMARIA 'No se perimiten cambios en la clave primaria';
CREATE EXCEPTION EX_AGREGAR_DETALLE_FACTURA_PAGA 'No se puede agregar un detalle a una factura pagada';
CREATE EXCEPTION EX_MODIFICAR_DETALLE_FACTURA_PAGA 'No se puede modificar un detalle a una factura pagada';
CREATE EXCEPTION EX_BORRAR_DETALLE_FACTURA_PAGA 'No se puede borrar un detalle a una factura pagada';
CREATE EXCEPTION EX_MODIFICAR_FACTURA_PAGA 'No se puede modificar una factura pagada';

SET TERM ^ ;

CREATE TRIGGER TRG_AIFACTURA FOR FACTURA
ACTIVE
AFTER INSERT
POSITION 0
AS
BEGIN
	INSERT INTO FACTURA_AUX(NRO) VALUES (NEW.NRO);
END^

CREATE TRIGGER TRG_ADFACTURA FOR FACTURA
ACTIVE
AFTER DELETE
POSITION 0
AS
BEGIN
	DELETE FROM FACTURA_AUX WHERE NRO = OLD.NRO;
END^

CREATE TRIGGER TRG_BIPAGO FOR PAGO
ACTIVE
BEFORE INSERT
POSITION 0
AS
BEGIN
	IF((SELECT ESTADO FROM FACTURA_AUX WHERE NRO = NEW.NRO) = 2) THEN
		EXCEPTION EX_AGREGAR_PAGO_FACTURA_PAGA;
	IF((SELECT MONTO_RESTANTE_PAGO FROM FACTURA_AUX WHERE NRO = NEW.NRO) > NEW.MONTO) THEN
		EXCEPTION EX_PAGO_MAYOR_AL_MONTO;
END^

CREATE TRIGGER TRG_AIPAGO FOR PAGO
ACTIVE
AFTER INSERT
POSITION 0
AS
BEGIN
	UPDATE FACTURA_AUX SET MONTO_RESTANTE_PAGO = MONTO_RESTANTE_PAGO - NEW.MONTO WHERE NRO = NEW.NRO;
END^

CREATE TRIGGER TRG_BUPAGO FOR PAGO
ACTIVE
BEFORE UPDATE
POSITION 0
AS
BEGIN
	IF(NEW.NRO <> OLD.NRO OR NEW.ID_PRODUCTO <> OLD.ID_PRODUCTO) THEN
		EXCEPTION EX_CLAVE_PRIMARIA;
END^

CREATE TRIGGER TRG_AUAGO FOR PAGO
ACTIVE
AFTER UPDATE
POSITION 0
AS
BEGIN
	IF(NEW.MONTO <> OLD.MONTO) THEN
	BEGIN
		IF((OLD.MONTO - NEW.MONTO) > 0) THEN --DISMINUYÓ EL NEW.MONTO
			UPDATE FACTURA_AUX SET MONTO_RESTANTE_PAGO = MONTO_RESTANTE_PAGO + (OLD.MONTO - NEW.MONTO) WHERE NRO = NEW.NRO;
		ELSE -- AUMENTÓ EL NEW.MONTO
			UPDATE FACTURA_AUX SET MONTO_RESTANTE_PAGO = MONTO_RESTANTE_PAGO - ABS((OLD.MONTO - NEW.MONTO)) WHERE NRO = NEW.NRO;
	END
END^

CREATE TRIGGER TRG_ADPAGO FOR PAGO
ACTIVE
AFTER DELETE
POSITION 0
AS
BEGIN
	UPDATE FACTURA_AUX SET MONTO_RESTANTE_PAGO = MONTO_RESTANTE_PAGO + OLD.MONTO WHERE NRO = OLD.NRO;
END^

CREATE TRIGGER TRG_BIDETALLE FOR DETALLE
ACTIVE
BEFORE INSERT
POSITION 0
AS
BEGIN
	IF((SELECT ESTADO FROM FACTURA_AUX WHERE NRO = NEW.NRO) = 2) THEN
		EXCEPTION EX_AGREGAR_DETALLE_FACTURA_PAGA;
END^

CREATE TRIGGER TRG_AIDETALLE FOR DETALLE
ACTIVE
AFTER INSERT
POSITION 0
AS
	DECLARE FLOAT MONTO_DETALLE;
BEGIN
	MONTO_DETALLE = (NEW.CANTIDAD * NEW.PRECIO);
	UPDATE FACTURA_AUX SET MONTO_TOTAL = MONTO_TOTAL + MONTO_DETALLE, MONTO_PENDIENTE_PAGO = MONTO_PENDIENTE_PAGO + MONTO_DETALLE WHERE NRO = NEW.NRO;
END^

CREATE TRIGGER TRG_BUDETALLE FOR DETALLE
ACTIVE
BEFORE UPDATE
POSITION 0
AS
	IF(NEW.NRO <> OLD.NRO OR NEW.ID_PRODUCTO <> OLD.ID_PRODUCTO) THEN
		EXCEPTION EX_CLAVE_PRIMARIA;
	IF(NEW.PRECIO <> OLD.PRECIO OR NEW.CANTIDAD <> OLD.CANTIDAD) THEN
		IF((SELECT ESTADO FROM FACTURA_AUX WHERE NRO = NEW.NRO) = 2) THEN
			EXCEPTION EX_MODIFICAR_DETALLE_FACTURA_PAGA;
BEGIN
END^

CREATE TRIGGER TRG_AUDETALLE FOR DETALLE
ACTIVE
AFTER UPDATE
POSITION 0
AS
	DECLARE FLOAT DIFERENCIA;
BEGIN
	DIFERENCIA = ((OLD.PRECIO * OLD.CANTIDAD) - (NEW.PRECIO * NEW.CANTIDAD));
	IF ((DIFERENCIA) > 0) THEN -- DISMINUYÓ EL MONTO DEL DETALLE
		UPDATE FACTURA_AUX SET MONTO_TOTAL = MONTO_TOTAL - DIFERENCIA, MONTO_PENDIENTE_PAGO = MONTO_PENDIENTE_PAGO - DIFERENCIA WHERE NRO = NEW.NRO;
	ELSE --AUMENTO EL MONTO DEL DETALLE
		UPDATE FACTURA_AUX SET MONTO_TOTAL = MONTO_TOTAL + ABS(DIFERENCIA), MONTO_PENDIENTE_PAGO = MONTO_PENDIENTE_PAGO + DIFERENCIA WHERE NRO = NEW.NRO;
END^

CREATE TRIGGER TRG_BDDETALLE FOR DETALLE
ACTIVE
BEFORE DELETE
POSITION 0
AS
	IF((SELECT ESTADO FROM FACTURA_AUX WHERE NRO = OLD.NRO) = 2) THEN
		EXCEPTION EX_BORRAR_DETALLE_FACTURA_PAGA;
BEGIN
END^

CREATE TRIGGER TRG_ADDETALLE FOR DETALLE
ACTIVE
AFTER DELETE
POSITION 0
AS
	DEFLACRE FLOAT MONTO_DETALLE;
BEGIN
	MONTO_DETALLE = OLD.PRECIO * OLD.CANTIDAD;
	UPDATE FACTURA_AUX SET MONTO_TOTAL = MONTO_TOTAL - MONTO_DETALLE WHERE NRO = OLD.NRO;
END^

CREATE TRIGGER TRG_BUFACTURA_AUX FOR FACTURA
ACTIVE
BEFORE UPDATE
POSITION 0
AS
BEGIN
	IF((OLD.ESTADO = 2) AND NEW.MONTO_TOTAL <> OLD.MONTO_TOTAL) THEN
		EXCEPTION EX_MODIFICAR_FACTURA_PAGA;
END^

--ESTE TRIGGER FUE LA ULTIMA MEJORA QUE LE HICE AL CODIGO CUANDO ME DI CUENTA QUE ERA MAS EFICIENTE MANEJAR EL ESTADO DESDDE LA FACTURA Y 
--NO REALIZANDO SELECT Y UPDATES DESDE LAS OTRAS TABLAS, QUE SI BIEN FUNCIONABA, ME PARECIÓ MAS EFICIENTE DE ESTA MANERA.
CREATE TRIGGER TRG_AUFACTURA_AUX FOR FACTURA 
ACTIVE
AFTER UPDATE
POSITION 0
AS
BEGIN
	IF(NEW.MONTO_RESTANTE_PAGO = 0) THEN
		NEW.ESTADO = 2;
	IF(NEW.MONTO = 0) THEN
		NEW.ESTADO = 0;
	IF(NEW.MONTO <> 0 AND NEW.ESTADO = 0) THEN
		NEW.ESTADO = 1;
END^


SET TERM ; ^
