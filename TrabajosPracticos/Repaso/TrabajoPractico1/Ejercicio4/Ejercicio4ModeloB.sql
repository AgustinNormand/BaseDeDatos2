CREATE TABLE LIBRO(
	ISBN INT NOT NULL,
	SIGUIENTE_ID INT NOT NULL,
	CONSTRAINT PK_LIBRO PRIMARY KEY (ISBN)
);

CREATE TABLE EJEMPLAR(
	ISBN INT NOT NULL,
	ID INT NOT NULL,
	CONSTRAINT PK_EJEMPLAR PRIMARY KEY (ISBN,ID),
	CONSTRAINT FK_EJEMPLAR_LIBRO FOREIGN KEY (ISBN) REFERENCES LIBRO
);

CREATE EXCEPTION EX_CLAVE_PRIMARIA 'No se permiten cambios en la clave primaria';

CREATE EXCEPTION EX_BORRAR_EJEMPLAR 'Solo se puede borrar el ejemplar con mayor ID';

SET TERM ^ ;

CREATE TRIGGER TRG_BILIBRO FOR LIBRO
ACTIVE
BEFORE INSERT
POSITION 0
AS
BEGIN
	NEW.SIGUIENTE_ID = 0;
END^

CREATE TRIGGER TRG_BIEJEMPLAR FOR EJEMPLAR
ACTIVE
BEFORE INSERT
POSITION 0
AS
BEGIN
	NEW.ID = (SELECT SIGUIENTE_ID FROM LIBRO WHERE ISBN = NEW.ISBN);
END^

CREATE TRIGGER TRG_AIEJEMPLAR FOR EJEMPLAR
ACTIVE
AFTER INSERT
POSITION 0
AS
BEGIN
	UPDATE LIBRO SET SIGUIENTE_ID = SIGUIENTE_ID + 1 WHERE ISBN = NEW.ISBN;
END^

CREATE TRIGGER TRG_BUEJEMPLAR FOR EJEMPLAR
ACTIVE
BEFORE UPDATE
POSITION 0
AS
BEGIN
	IF(NEW.ID <> OLD.ID) THEN
		EXCEPTION EX_CLAVE_PRIMARIA;
	IF(NEW.ISBN <> OLD.ISBN) THEN
		EXCEPTION EX_CLAVE_PRIMARIA;
END^

CREATE TRIGGER TRG_BDEJEMPLAR FOR EJEMPLAR
ACTIVE
BEFORE DELETE
POSITION 0
AS
BEGIN
	IF(OLD.ID+1 <> (SELECT SIGUIENTE_ID FROM LIBRO WHERE ISBN = OLD.ISBN)) THEN
		EXCEPTION EX_BORRAR_EJEMPLAR;
END^

CREATE TRIGGER TRG_ADDELETE FOR EJEMPLAR
ACTIVE
AFTER DELETE
POSITION 0
AS
BEGIN
	UPDATE LIBRO SET SIGUIENTE_ID = SIGUIENTE_ID - 1 WHERE ISBN = OLD.ISBN;
END^

SET TERM ; ^
